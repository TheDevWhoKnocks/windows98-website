'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var _coreCanvasElement = require('../core/CanvasElement');

var _coreCanvasElement2 = _interopRequireDefault(_coreCanvasElement);

var _coreUtil = require('../core/util');

var _coreDefaults = require('../core/defaults');

var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;

var Text = (function (_CanvasElement) {
  function Text(options) {
    _classCallCheck(this, _Text);

    _get(Object.getPrototypeOf(_Text.prototype), 'constructor', this).call(this, options);
    options = _underscore2['default'].defaults(_underscore2['default'].clone(options), {
      font: _coreDefaults.standardFont
    });
    (0, _coreUtil.checkOptions)(options, ['text']);
    this.font = options.font;
    this.text = options.text;
  }

  _inherits(Text, _CanvasElement);

  var _Text = Text;

  _createClass(_Text, [{
    key: 'draw',
    value: function draw() {
      var _font = this.font;
      var style = _font.style;
      var weight = _font.weight;
      var size = _font.size;
      var family = _font.family;
      var color = _font.color;

      style = style || 'normal';
      weight = weight || 'normal';
      this.canvas.font = '' + style + ' ' + weight + ' ' + size + 'px "' + family + '"';
      this.canvas.fillStyle = color;
      this.canvas.textAlign = 'left';
      this.canvas.textBaseline = 'top';
      var measurement = this.canvas.measureText(this.text);
      _underscore2['default'].defaults(measurement, { width: 0, height: 0 });
      if (isFirefox) {
        this.canvas.fillText(this.text, -measurement.width / 2, size / 4);
      } else {
        this.canvas.fillText(this.text, -measurement.width / 2, -measurement.height / 2);
      }
    }
  }]);

  Text = (0, _coreUtil.RedrawProperties)(['font', 'text'])(Text) || Text;
  return Text;
})(_coreCanvasElement2['default']);

exports['default'] = Text;
module.exports = exports['default'];