'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var _coreCanvasElement = require('../core/CanvasElement');

var _coreCanvasElement2 = _interopRequireDefault(_coreCanvasElement);

var _coreUtil = require('../core/util');

var Path = (function (_CanvasElement) {
  function Path(options) {
    _classCallCheck(this, _Path);

    _get(Object.getPrototypeOf(_Path.prototype), 'constructor', this).call(this, options);

    _underscore2['default'].defaults(options, {
      fill: true,
      fillColor: '#000',
      stroke: true,
      strokeColor: '#000',
      strokeThickness: 0,
      rotate: 0
    });

    this.fill = options.fill;
    this.fillColor = options.fillColor;
    this.stroke = options.stroke;
    this.strokeColor = options.strokeColor;
    this.strokeThickness = options.strokeThickness;
    this.rotate = options.rotate;
    this.path = options.path;
  }

  _inherits(Path, _CanvasElement);

  var _Path = Path;

  _createClass(_Path, [{
    key: 'draw',
    value: function draw() {
      var _this = this;

      this.canvas.lineWidth = this.strokeThickness;
      this.canvas.strokeStyle = this.strokeColor;
      this.canvas.fillStyle = this.fillColor;

      _underscore2['default'].each(this.path, function (path) {
        _this.canvas.beginPath();
        var position = path[0];
        _this.canvas.moveTo(position[0], position[1]);
        for (var i = 1; i < path.length; i++) {
          _this.canvas.lineTo(path[i][0], path[i][1]);
        }
        if (_this.fill) {
          _this.canvas.fill();
        }
        if (_this.stroke) {
          _this.canvas.stroke();
        }
        _this.canvas.closePath();
      });
    }
  }]);

  Path = (0, _coreUtil.RedrawProperties)(['left', 'top', 'fill', 'fillColor', 'stroke', 'strokeColor', 'strokeThickness', 'rotate', 'path'])(Path) || Path;
  return Path;
})(_coreCanvasElement2['default']);

exports['default'] = Path;
module.exports = exports['default'];